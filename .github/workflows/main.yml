name: CI model to dockerhub

on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - staging

jobs:
  retraining_model:
    runs-on: ubuntu-latest
    container: docker://dvcorg/cml:latest
    env:
      repo_token: ${{ secrets.GITHUBTOKEN }}
    steps:
      - uses: actions/checkout@v2

      - name: Upgrade pip
        run: pip install --upgrade pip

      - name: Install requirements
        run:
          pip3 install -r requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-southeast-1'

      - name: Download data
        run: |
            python3 descargar_data.py
  

      - name: Execute the training model
        run: |
          python3 retraining.py

      - name: Generating report
      
        run: |
          echo "## Model metrics" > report.md
          cat metrics.txt >> report.md
    
          cml-send-comment report.md



  build_docker_image:
    needs: retraining_model
    runs-on: ubuntu-latest

    steps:
      - name: Check the repo
        uses: actions/checkout@v2

      - name: Login to dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build docker image
        run: docker build -t mlops2025 .

      - name: Docker push to Dockerhub
        run: docker push mlops2025

      - name: Login into the server
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            docker login --u '${{secrets.DOCKER_USERNAME}}' --password-stdin '${{secrets.DOCKER_PASSWORD}}'
            if docker ps --all | grep mlops2025; then
              docker stop mlops2025
              docker rm smlops2025
            fi
            
            docker pull ${{ secrets.DOCKER_USERNAME }}/mlops2025
            docker run -d --name mlops2025 -p 8000:8000 ${{secrets.DOCKER_USERNAME}}/mlops2025
