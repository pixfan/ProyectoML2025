name: CI pipeline for ML model and DVC push

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - staging

jobs:

  # JOB 1: Reentrenamiento del modelo
  retraining_model:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    container: docker://dvcorg/cml:latest
    env:
      repo_token: ${{ secrets.GITHUBTOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Upgrade pip
        run: pip install --upgrade pip

      - name: Install requirements
        run: pip install -r requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Download data
        run: python3 descargar_data.py

      - name: Execute the training model
        run: python3 retraining.py

      - name: Generate training report
        run: |
          echo "## Model metrics" > report.md
          cat metrics.txt >> report.md
          cml-send-comment report.md

  # JOB 2: Construcci√≥n y despliegue de imagen Docker
  build_and_deploy:
    if: github.ref == 'refs/heads/staging'
    needs: retraining_model
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t hipertensionv1gsp .

      - name: Tag Docker image
        run: docker tag hipertensionv1gsp samcfer/hipertensionv1gsp:latest

      - name: Push Docker image
        run: docker push samcfer/hipertensionv1gsp

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            if docker ps -a | grep hipertensionv1gsp; then
              docker stop hipertensionv1gsp
              docker rm hipertensionv1gsp
            fi
            docker pull samcfer/hipertensionv1gsp
            docker run -d --name hipertensionv1gsp -p 80:8501 samcfer/hipertensionv1gsp


